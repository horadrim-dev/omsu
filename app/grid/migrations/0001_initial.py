# Generated by Django 4.0.6 on 2022-08-01 04:03

import ckeditor_uploader.fields
import datetime
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('menus', '0001_initial'),
        ('content', '0002_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Column',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.PositiveSmallIntegerField(blank=True, default=0, help_text='Если оставить равным 0 - добавится в конец.', null=True, verbose_name='Порядок')),
                ('name', models.CharField(default='', max_length=100, verbose_name='Название')),
                ('classes', models.CharField(blank=True, help_text='Можно использовать bootstrap классы.', max_length=256, verbose_name='CSS классы')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Последнее изменение')),
                ('width', models.PositiveSmallIntegerField(blank=True, default=0, help_text='Ширина экрана разделяется на 12 частей. В сумме с остальными блоками ширина не должна быть больше 12. Если оставить 0, ширина будет вычислена автоматически.', null=True, verbose_name='Ширина блока')),
            ],
            options={
                'verbose_name': 'Колонка',
                'verbose_name_plural': 'Колонки',
                'ordering': ['section', 'order'],
            },
        ),
        migrations.CreateModel(
            name='Module',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.PositiveSmallIntegerField(blank=True, default=0, help_text='Если оставить равным 0 - добавится в конец.', null=True, verbose_name='Порядок')),
                ('name', models.CharField(default='', max_length=100, verbose_name='Название')),
                ('classes', models.CharField(blank=True, help_text='Можно использовать bootstrap классы.', max_length=256, verbose_name='CSS классы')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Последнее изменение')),
                ('invert', models.BooleanField(default=False, help_text='Модуль будет привязан ко всем меню, кроме отмеченных.', verbose_name='Инвертировать выбор меню')),
                ('show_on_every_page', models.BooleanField(default=False, help_text='Если выбрано - значения из поля "меню" будут проигнорированы.', verbose_name='Отображать на всех страницах сайта')),
                ('show_title', models.BooleanField(default=True, verbose_name='Заголовок')),
                ('standart_design', models.BooleanField(default=True, verbose_name='Оформление по умолчанию')),
                ('centrize', models.BooleanField(default=False, verbose_name='Центрировать содержимое')),
                ('published', models.BooleanField(default=True, verbose_name='Опубликовано')),
                ('published_at', models.DateField(default=datetime.date.today, verbose_name='Дата публикации')),
                ('pre_html', ckeditor_uploader.fields.RichTextUploadingField(blank=True, default='', null=True, verbose_name='Текст в начале модуля')),
                ('post_html', ckeditor_uploader.fields.RichTextUploadingField(blank=True, default='', null=True, verbose_name='Текст в конце модуля')),
                ('column', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='grid.column', verbose_name='Позиция')),
                ('menu', models.ManyToManyField(to='menus.menu', verbose_name='Привязка к меню')),
            ],
            options={
                'verbose_name': 'Модуль',
                'verbose_name_plural': 'Модули',
                'ordering': ['column', 'order'],
            },
        ),
        migrations.CreateModel(
            name='Section',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.PositiveSmallIntegerField(blank=True, default=0, help_text='Если оставить равным 0 - добавится в конец.', null=True, verbose_name='Порядок')),
                ('name', models.CharField(default='', max_length=100, verbose_name='Название')),
                ('classes', models.CharField(blank=True, help_text='Можно использовать bootstrap классы.', max_length=256, verbose_name='CSS классы')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Последнее изменение')),
                ('indents', models.BooleanField(default=True, verbose_name='Отступы по бокам')),
            ],
            options={
                'verbose_name': 'Секция',
                'verbose_name_plural': 'Секции',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='ModuleContent',
            fields=[
                ('contentlayout_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='content.contentlayout')),
                ('order', models.PositiveSmallIntegerField(blank=True, default=0, help_text='Если оставить равным 0 - добавится в конец.', null=True, verbose_name='Порядок')),
                ('module', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='grid.module', verbose_name='Модуль')),
            ],
            options={
                'verbose_name': 'Контент',
                'verbose_name_plural': 'Контент',
                'ordering': ['order'],
            },
            bases=('content.contentlayout', models.Model),
        ),
        migrations.AddField(
            model_name='column',
            name='section',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='grid.section', verbose_name='Секция'),
        ),
    ]
